

    #include <bits/stdc++.h>
    using namespace std;
     
    #define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    #define endl "\n"
    #define int long long
     
    const int N = 1e5 + 5;
     
     
    struct BIT
    {
    	int N;
    	vector<int> bit;
     
    	void init(int n)
    	{
    		N = n;
    		bit.assign(n + 1, 0);
    	}
     
    	void update(int idx, int val)
    	{
    		while(idx <= N)
    		{
    			bit[idx] += val;
    			idx += idx & -idx;
    		}
    	}
     
    	void updateMax(int idx, int val)
    	{
    		while(idx <= N)
    		{
    			bit[idx] = max(bit[idx], val);
    			idx += idx & -idx;
    		}
    	}
     
    	int pref(int idx)
    	{
    		int ans = 0;
    		while(idx > 0)
    		{
    			ans += bit[idx];
    			idx -= idx & -idx;
    		}
    		return ans;
    	}
     
    	int rsum(int l, int r)
    	{
    		return pref(r) - pref(l - 1);
    	}
     
    	int prefMax(int idx)
    	{
    		int ans = -2e9;
    		while(idx > 0)
    		{
    			ans = max(ans, bit[idx]);
    			idx -= idx & -idx;
    		}
    		return ans;
    	}
    };
     
     
    int t, q;
    int a[N], ans[N];
    vector<int> g[N];
    vector<pair<int, int> > query[N];
     
    int32_t main()
    {
    	IOS;
    	cin >> t >> q;
    	for(int i = 1; i <= t; i++)
    	{
    		cin >> a[i];
    		g[a[i]].push_back(i);
    	}
    	for(int i = 1; i <= q; i++)
    	{
    		int m, n;
    		cin >> m >> n;
    		query[m].push_back({i, n});
    	}
    	a[0] = -1;
    	BIT bit;
    	bit.init(t + 5);
    	for(int i = 1e5; i >= 1; i--)
    	{
    		for(auto &it:g[i])
    			bit.update(it, 1);
    		for(auto &it:query[i])
    		{
    			int idx = it.first;
    			int val = it.second;
    			int lo = 1, hi = t;
    			if(bit.pref(t) < val)
    			{
    				ans[idx] = 0;
    				continue;
    			}
    			while(lo < hi)
    			{
    				int mid = (lo + hi) / 2;
    				if(bit.pref(mid) >= val)
    					hi = mid;
    				else
    					lo = mid + 1;
    			}
    			ans[idx] = lo;
    		}
    	}
    	for(int i = 1; i <= q; i++)
    		cout << a[ans[i]] << endl;
    	return 0;
    }

