    #include <math.h>
    #include <stdio.h>
    #include <unordered_map>
     
    using namespace std;
     
    unordered_map<int, int> rmap;
     
    int RaiseToPow(int x, int y, int P) {
    	if (y == 0) return 1 % P;
    	int ans = RaiseToPow(x, y >> 1, P);
    	ans = ((long long) ans * ans) % P;
    	if (y & 1) ans = ((long long) ans * x) % P;
    	return ans;
    }
     
    int main() {
    	int T, R, S, P;
    	scanf("%d", &T);
    	while (T--) {
    		scanf("%d %d %d", &R, &S, &P);
    		if (P == 2) {
    			printf("1\n"); continue;
    		}	
    		int Q = ((long long) S * (R - 1)) % P;
    		Q = (Q + 1) % P;
    		rmap.clear();
    		int psqrt = (int) sqrt(P);
    		int rpow = 1;
    		for (int r = 0; r < psqrt; r++, rpow = ((long long) rpow * R) % P) rmap[rpow] = r;
    		rpow = RaiseToPow(rpow, P - 2, P);
    		int N = -1, rbase = 1;
    		for (int q = 0; q * psqrt < P; q++, rbase = ((long long) rbase * rpow) % P) {
    			int x = ((long long) Q * rbase) % P;
    			if (rmap.find(x) != rmap.end()) {
    				N = q * psqrt + rmap[x];
    				break;
    			}
    		}
    		printf("%d\n", N);
    	}
    	
    	return 0;
    }