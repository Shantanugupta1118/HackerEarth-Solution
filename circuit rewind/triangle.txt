

    #include <bits/stdc++.h>
    using namespace std;
         
    #define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template <typename Arg1>
    void __f(const char* name, Arg1&& arg1){
      cerr << name << ": " << arg1 << endl;
    }
    template <typename Arg1, typename... Args>
      void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names + 1, ',');
        cerr.write(names, comma - names) << ": " << arg1 << " |";
        __f(comma + 1, args...);
    }
         
    #define int  long long
    using ii = pair<int, int>;
    const int INF = 1 << 29;
    const int MOD = 1e9 + 7;
    mt19937 mrand(random_device{}());
    const int MAX_N = 1e6 + 10;
    int dp[MAX_N];
     
    int modmul(int a, int b){
      return (a * 1ll * b) % MOD;
    }
     
    void solve(){
      dp[1] = 1;
      for (int i = 2; i < MAX_N; i++){
        dp[i] = modmul(3, dp[i - 1]) + 2;
        dp[i] %= MOD;
      }
      int Q;
      cin >> Q;
      while (Q--){
        int n;
        cin >> n;
        n++;
        int ret = dp[n];
        cout << ret << endl;
      }
    }
     
    int32_t main(){
      ios_base::sync_with_stdio(false);
      cin.tie(nullptr);
      solve();
    }

